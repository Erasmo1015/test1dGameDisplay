/*
   This file was generated automatically by the Mojo IDE version B1.3.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module mojo_top_0 (
    input clk,
    input rst_n,
    output reg [7:0] led,
    input cclk,
    output reg spi_miso,
    input spi_ss,
    input spi_mosi,
    input spi_sck,
    output reg [3:0] spi_channel,
    input avr_tx,
    output reg avr_rx,
    input avr_rx_busy,
    output reg [7:0] display_seg,
    output reg [2:0] display_sel
  );
  
  
  
  reg rst;
  
  wire [1-1:0] M_reset_cond_out;
  reg [1-1:0] M_reset_cond_in;
  reset_conditioner_1 reset_cond (
    .clk(clk),
    .in(M_reset_cond_in),
    .out(M_reset_cond_out)
  );
  wire [8-1:0] M_numbersDisplay_seg;
  wire [3-1:0] M_numbersDisplay_sel;
  reg [32-1:0] M_numbersDisplay_values;
  multi_seven_seg_2 numbersDisplay (
    .clk(clk),
    .rst(rst),
    .values(M_numbersDisplay_values),
    .seg(M_numbersDisplay_seg),
    .sel(M_numbersDisplay_sel)
  );
  
  integer i;
  
  always @* begin
    M_reset_cond_in = ~rst_n;
    rst = M_reset_cond_out;
    led = 8'h00;
    spi_miso = 1'bz;
    spi_channel = 4'bzzzz;
    avr_rx = 1'bz;
    for (i = 1'h0; i < 4'h8; i = i + 1) begin
      M_numbersDisplay_values[(i)*4+3-:4] = 4'h8;
    end
    display_seg = M_numbersDisplay_seg;
    display_sel = M_numbersDisplay_sel;
  end
endmodule
